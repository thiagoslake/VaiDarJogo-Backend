require('dotenv').config();
const qrcode = require('qrcode-terminal');
const fs = require('fs');
const path = require('path');

class ConectarWhatsApp {
  constructor() {
    this.qrPath = path.join(process.cwd(), 'logs', 'whatsapp-qr.txt');
  }

  async conectarWhatsApp() {
    console.log('üì± CONECTANDO WHATSAPP WEB\n');

    try {
      // 1. Verificar se arquivo QR existe
      console.log('1Ô∏è‚É£ Verificando QR Code...');
      if (!fs.existsSync(this.qrPath)) {
        console.log('‚ùå Arquivo QR n√£o encontrado');
        console.log('üí° Solu√ß√£o: Inicialize o WhatsApp Web primeiro');
        return;
      }

      // 2. Ler QR Code
      const qrData = fs.readFileSync(this.qrPath, 'utf8').trim();
      console.log('‚úÖ QR Code encontrado!');

      // 3. Exibir QR Code no terminal
      console.log('\n2Ô∏è‚É£ Exibindo QR Code no terminal:');
      console.log('‚ïê'.repeat(50));
      qrcode.generate(qrData, { small: true });
      console.log('‚ïê'.repeat(50));

      // 4. Instru√ß√µes
      console.log('\n3Ô∏è‚É£ INSTRU√á√ïES PARA CONECTAR:');
      console.log('   üì± 1. Abra o WhatsApp no seu telefone');
      console.log('   ‚öôÔ∏è  2. V√° para Configura√ß√µes > Dispositivos conectados');
      console.log('   ‚ûï 3. Toque em "Conectar um dispositivo"');
      console.log('   üì∑ 4. Escaneie o QR Code acima');
      console.log('   ‚è≥ 5. Aguarde a confirma√ß√£o');

      // 5. Monitorar status
      console.log('\n4Ô∏è‚É£ Monitorando status da conex√£o...');
      console.log('   Aguardando conex√£o... (Pressione Ctrl+C para cancelar)');

      // 6. Verificar status periodicamente
      let tentativas = 0;
      const maxTentativas = 60; // 5 minutos
      
      const verificarStatus = async () => {
        try {
          const response = await fetch('http://localhost:3000/api/whatsapp/status');
          const status = await response.json();
          
          tentativas++;
          
          if (status.data.isReady && status.data.isAuthenticated) {
            console.log('\nüéâ SUCESSO! WhatsApp Web conectado!');
            console.log('   ‚úÖ Sistema pronto para enviar mensagens');
            console.log('   üì± Voc√™ pode agora testar o envio de confirma√ß√µes');
            return true;
          } else if (status.data.isReady && !status.data.isAuthenticated) {
            console.log(`   ‚è≥ Aguardando autentica√ß√£o... (${tentativas}/${maxTentativas})`);
          } else {
            console.log(`   ‚è≥ Aguardando inicializa√ß√£o... (${tentativas}/${maxTentativas})`);
          }
          
          if (tentativas >= maxTentativas) {
            console.log('\n‚è∞ Tempo esgotado!');
            console.log('   üí° Tente novamente ou verifique se o QR Code ainda √© v√°lido');
            return false;
          }
          
          // Verificar novamente em 5 segundos
          setTimeout(verificarStatus, 5000);
          
        } catch (error) {
          console.log(`   ‚ùå Erro ao verificar status: ${error.message}`);
          setTimeout(verificarStatus, 5000);
        }
      };

      // Iniciar verifica√ß√£o
      await verificarStatus();

    } catch (error) {
      console.log('‚ùå Erro ao conectar WhatsApp:', error.message);
    }
  }

  async verificarStatus() {
    try {
      const response = await fetch('http://localhost:3000/api/whatsapp/status');
      const status = await response.json();
      
      console.log('üìä STATUS DO WHATSAPP WEB:');
      console.log(`   Pronto: ${status.data.isReady ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
      console.log(`   Autenticado: ${status.data.isAuthenticated ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
      console.log(`   Tem QR Code: ${status.data.hasQRCode ? '‚úÖ SIM' : '‚ùå N√ÉO'}`);
      
      if (status.data.isReady && status.data.isAuthenticated) {
        console.log('\nüéâ WhatsApp Web est√° conectado e pronto!');
        return true;
      } else {
        console.log('\n‚ö†Ô∏è WhatsApp Web n√£o est√° conectado');
        return false;
      }
    } catch (error) {
      console.log('‚ùå Erro ao verificar status:', error.message);
      return false;
    }
  }
}

// Executar
async function main() {
  const conectar = new ConectarWhatsApp();
  
  // Verificar argumentos da linha de comando
  const args = process.argv.slice(2);
  
  if (args.includes('--status')) {
    await conectar.verificarStatus();
  } else {
    await conectar.conectarWhatsApp();
  }
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = ConectarWhatsApp;
